"""migration_init

Revision ID: 90149890361c
Revises: 
Create Date: 2023-10-02 13:56:35.906383

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90149890361c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('slug', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dish_name', sa.String(length=120), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=120), nullable=True),
    sa.Column('available', sa.Integer(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('photo', sa.String(length=120), nullable=True),
    sa.Column('ccal', sa.Integer(), nullable=True),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.Column('fat', sa.Integer(), nullable=True),
    sa.Column('carbs', sa.Integer(), nullable=True),
    sa.Column('average_rate', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['Categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('second_name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['User_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('Addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('street', sa.String(length=120), nullable=True),
    sa.Column('building', sa.String(length=120), nullable=True),
    sa.Column('apt', sa.Integer(), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('entrance', sa.Integer(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Dish_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['dish_id'], ['Dishes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('address', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.Column('fat', sa.Integer(), nullable=True),
    sa.Column('carbs', sa.Integer(), nullable=True),
    sa.Column('ccal', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=350), nullable=True),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address'], ['Addresses.id'], ),
    sa.ForeignKeyConstraint(['status'], ['Statuses.id'], ),
    sa.ForeignKeyConstraint(['user'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Ordered_dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dish', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dish'], ['Dishes.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['Orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Ordered_dishes')
    op.drop_table('Orders')
    op.drop_table('Dish_rates')
    op.drop_table('Addresses')
    op.drop_table('Users')
    op.drop_table('Dishes')
    op.drop_table('User_types')
    op.drop_table('Statuses')
    op.drop_table('Categories')
    # ### end Alembic commands ###
